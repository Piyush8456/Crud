@model EmployeesCrudOp.Models.EmployeeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.employeeId);

    <div class="form-group">
        <label class="control-label col-md-2"> Firstname  : </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Lastname : </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Age : </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Gender : </label>
        <div class="col-md-10">
            Male
            @Html.RadioButtonFor(m => m.gender, "Male")
            Female
            @Html.RadioButtonFor(m => m.gender, "Female")
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Mobile Number : </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.mobileNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mobileNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Email : </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Employee Role : </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.employeeType, new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem { Value = "1", Text = "FrontEnd Developer" },
                    new SelectListItem { Value = "2", Text = "BackEnd Developer" },
                    new SelectListItem { Value = "3", Text = "Designer" },
                    new SelectListItem { Value = "4", Text = "Tester" },
                    new SelectListItem { Value = "5", Text = "BDE" },
                    new SelectListItem { Value = "6", Text = "HR" }
                }, "Value", "Text", Model.employeeType), "Select Employee Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.employeeType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Enter Joining Date : </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.joiningDate, new { htmlAttributes = new { @class = "form-control", type = "date", @Value = Model.joiningDate.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.joiningDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn" })
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>


}